@inject HttpClient _client

<EditForm Model="@booking" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Buses: </label>
            <div>
                <InputSelect @bind-Value="booking.BusId" class="form-control">
                    <option value="">-- Select Bus --</option>
                    @if (Buses != null)
                    {
                        foreach (var bus in Buses)
                        {
                            <option value="@bus.Id">@bus.Seat.Seats</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=> booking.BusId)" />
            </div>
        </div>
      
    <div class="form-group">
        <label>Services: </label>
        <div>
            <InputSelect @bind-Value="booking.ServiceId" class="form-control">
                <option value="">-- Select Service --</option>
                @if (Services != null)
                {
                    foreach (var service in Services)
                    {
                        <option value="@service.Id">@service.Type</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(()=> booking.ServiceId)" />
        </div>
    </div>

        <div class="form-group">
            <label>Customer: </label>
            <div>
                <InputSelect @bind-Value="booking.CustomerId" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">@customer.FirstName</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(()=> booking.CustomerId)" />
            </div>
        </div>
    <div class="form-group">
        <label>Location: </label>
          <div>
            <InputText @bind-Value="booking.Location" class="form-control" />
            <ValidationMessage For="@(()=> booking.Location)" />
          </div>
    </div>
    <div class="form-group">
        <label>Dropoff point(s): </label>
        <div>
            <InputText @bind-Value="booking.Dropoff" class="form-control" />
            <ValidationMessage For="@(()=> booking.Dropoff)" />
        </div>
    </div>
        <div class="form-group">
            <label>Book Date: </label>
            <div>
                <InputDate @bind-Value="booking.DateOut" class="form-control">
                </InputDate>
                <ValidationMessage For="@(()=> booking.DateOut)" />
            </div>
        </div>
         <div class="form-group">
            <label>No. of Hours: </label>
            <div>
                <InputNumber @bind-Value="booking.Hours" class="form-control" />
                <ValidationMessage For="@(()=> booking.Hours)" />
            </div>
        </div>
    </fieldset>

    


    @if (!Disabled)
    {
        <button type="submit" class=" btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="bookings" />
</EditForm>
@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Booking booking { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Bus> Buses;
    private IList<Customer> Customers;
    private IList<Service> Services;

    protected async override Task OnInitializedAsync()
    {

        Buses = await _client.GetFromJsonAsync<List<Bus>>($"{Endpoints.BusesEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

}