@page "/customers/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />
<EditForm Model="@customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>First Name: </label>
        <div>
            <InputText @bind-Value="customer.FirstName" class="form-control" />
            <ValidationMessage For="@(()=> customer.FirstName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Last Name: </label>
        <div>
            <InputText @bind-Value="customer.LastName" class="form-control" />
            <ValidationMessage For="@(()=> customer.LastName)" />
        </div>
    </div>
    <div class="form-group">
        <label>Address: </label>
        <div>
            <InputText @bind-Value="customer.Address" class="form-control" />
            <ValidationMessage For="@(()=> customer.Address)" />
        </div>
    </div>

    <div class="form-group">
        <label>Contact Number: </label>
        <div>
            <InputText @bind-Value="customer.ContactNumber" class="form-control" />
            <ValidationMessage For="@(()=> customer.ContactNumber)" />
        </div>
    </div>

    <div class="form-group">
        <label>Email Address: </label>
        <div>
            <InputText @bind-Value="customer.EmailAddress" class="form-control" />
            <ValidationMessage For="@(()=> customer.EmailAddress)" />
        </div>
    </div>

    <button type="submit" class=" btn btn-success btn-block">
        Create Customer
    </button>
</EditForm>

@code {
    Customer customer = new Customer();

    private IList<Customer> Customers;

    protected async override Task OnInitializedAsync()
    {
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.CustomersEndpoint, customer);
        _navManager.NavigateTo("/customers/");
    }
}