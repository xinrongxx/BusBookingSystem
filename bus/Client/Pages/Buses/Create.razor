@page "/buses/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Bus</h3>
<hr />
<br />
<EditForm Model="@bus" OnValidSubmit="CreateBus">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Number of Bus needed: </label>
        <div>
            <InputNumber @bind-Value="bus.BusNo" class="form-control" />
            <ValidationMessage For="@(()=> bus.BusNo)" />
        </div>
    </div>

    <div class="form-group">
        <label>Seat: </label>
        <div>
            <InputSelect @bind-Value="bus.SeatId" class="form-control">
               <option value="">-- Select Seat --</option>
                @if (Seats != null)
                {
                    foreach (var seat in Seats)
                    {
                        <option value="@seat.Id">@seat.Seats</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="@(()=> bus.SeatId)" />
        </div>
    </div>

    <button type="submit" class=" btn btn-success btn-block">
        Create Bus
    </button>
</EditForm>

@code {
    Bus bus = new Bus();

    private IList<Seat> Seats;

    protected async override Task OnInitializedAsync()
    {
        Seats = await _client.GetFromJsonAsync<List<Seat>>($"{Endpoints.SeatsEndpoint}");
    }

    private async Task CreateBus()
    {
        await _client.PostAsJsonAsync(Endpoints.BusesEndpoint, bus);
        _navManager.NavigateTo("/buses/");
    }
}